{
	"info": {
		"_postman_id": "b03574d7-8cc1-458a-ba7f-d78621c9d8f7",
		"name": "Saga",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Flush state",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/flush/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"flush",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create product (cost: 100, quantity: 10)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"item\": \"Перчатки\",\r\n    \"cost\": 100,\r\n    \"quantity\": 10\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{store}}/products/",
					"host": [
						"{{store}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Set balance 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"sum\": 400\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{transaction}}/balance/",
					"host": [
						"{{transaction}}"
					],
					"path": [
						"balance",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order (quantity: 12) - not enough products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result).to.not.eql(null);\r",
							"});\r",
							"var responseJSON = JSON.parse(responseBody)\r",
							"pm.collectionVariables.set(\"orderId\", responseJSON[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/orders/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order (quantity: 5) - not enough money",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result).to.not.eql(null);\r",
							"});\r",
							"var responseJSON = JSON.parse(responseBody)\r",
							"pm.collectionVariables.set(\"orderId\", responseJSON[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 5,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/orders/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Products left 5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].quantity).to.eql(5);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{store}}/products/",
					"host": [
						"{{store}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Rollback order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/orders/{{orderId}}/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"orders",
						"{{orderId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Products left 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].quantity).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{store}}/products/",
					"host": [
						"{{store}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order (quantity: 2) not enough courier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result).to.not.eql(null);\r",
							"});\r",
							"var responseJSON = JSON.parse(responseBody)\r",
							"pm.collectionVariables.set(\"orderId\", responseJSON[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 2,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/orders/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Balance left 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{transaction}}/balance/",
					"host": [
						"{{transaction}}"
					],
					"path": [
						"balance",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Rollback order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/orders/{{orderId}}/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"orders",
						"{{orderId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Balance left 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{transaction}}/balance/",
					"host": [
						"{{transaction}}"
					],
					"path": [
						"balance",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create courier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{delivery}}/couriers/",
					"host": [
						"{{delivery}}"
					],
					"path": [
						"couriers",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order (quantity: 2) - OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status test\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.result).to.eql(null);\r",
							"});\r",
							"var responseJSON = JSON.parse(responseBody)\r",
							"pm.collectionVariables.set(\"orderId\", responseJSON[\"id\"])"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 2,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/orders/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"orders",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Products left 8",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].quantity).to.eql(8);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{store}}/products/",
					"host": [
						"{{store}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Balance left 200",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{transaction}}/balance/",
					"host": [
						"{{transaction}}"
					],
					"path": [
						"balance",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Courier is bisy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].is_free).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{delivery}}/couriers/",
					"host": [
						"{{delivery}}"
					],
					"path": [
						"couriers",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Rollback order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"product_id\": 1,\r\n    \"quantity\": 12,\r\n    \"delivery_date\": \"2020-02-10\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{saga}}/orders/{{orderId}}/",
					"host": [
						"{{saga}}"
					],
					"path": [
						"orders",
						"{{orderId}}",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Products left 10",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].quantity).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{store}}/products/",
					"host": [
						"{{store}}"
					],
					"path": [
						"products",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Balance left 400",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.sum).to.eql(400);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{transaction}}/balance/",
					"host": [
						"{{transaction}}"
					],
					"path": [
						"balance",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Courier is free",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"result\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData[0].is_free).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{delivery}}/couriers/",
					"host": [
						"{{delivery}}"
					],
					"path": [
						"couriers",
						""
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "saga",
			"value": "http://arch.homework",
			"type": "string"
		},
		{
			"key": "delivery",
			"value": "http://arch.homework/delivery",
			"type": "string"
		},
		{
			"key": "store",
			"value": "http://arch.homework/store",
			"type": "string"
		},
		{
			"key": "transaction",
			"value": "http://arch.homework/transaction",
			"type": "string"
		},
		{
			"key": "orderId",
			"value": 4
		}
	]
}